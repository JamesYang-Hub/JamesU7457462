import numpy as np

pwm1 = np.array(
    [[61, 16, 352, 3, 354, 268, 360, 222, 155, 56, 83, 82, 82, 68, 77],
     [145, 46, 0, 10, 0, 0, 3, 2, 44, 135, 147, 127, 118, 107, 101],
     [152, 18, 2, 2, 5, 0, 20, 44, 157, 150, 128, 128, 128, 139, 140],
     [31, 309, 35, 374, 30, 121, 6, 121, 33, 48, 31, 52, 61, 75, 71]])


def pwm_to_ppm(pwm, pseudocount=0):
    pwm1=np.array(pwm, dtype = float) + pseudocount
    sum1 = pwm1.sum(axis=0)
    for i in range(pwm1.shape[0]):
        for j in range(pwm1.shape[1]):
            pwm1[i, j] = pwm1[i, j]/sum1[i]
    return pwm1


ppm1=pwm_to_ppm(pwm1)
print(ppm1)
import math
def ppm_to_pssm(ppm):
    ppm=numpy.log2(ppm)-numpy.log2(0.25)
    return ppm
print(ppm_to_pssm(ppm1))

def seq_to_indices(seq: str) -> list:
    list1=['A','C','G','T']
    list2=[]
    for j in range(0,4):
        for i in seq:
            if list1[j]==i:
                list2.append(j)
    return list2


def score_indexed_seq(pssm, indexed_seq):
    seq_index=seq_to_indices(indexed_seq)
    list3=[]
    for i,j in enumerate(seq_index):
        list3.append(pssm[j][i])
    return list3

seq3="ACAAGT"   

print(score_indexed_seq(pssm1,seq3))

def findall_matching_positions(scores, cutoff):
    values=np.zeros(scores.shape[1], dtype =  int)
    count=0
    for j in range(scores.shape[1]):
        for i in range(scores.shape[0]):
            if scores[i,j]>=cutoff:
                count+=1
        values[j]=count
        count=0
    return values