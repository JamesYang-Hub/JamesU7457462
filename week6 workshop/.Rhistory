# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +
geom_point()+geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+annotation_raster(acantho_logo,aes(species=acantho),xmax = 25,ymin = 1,ymax = 25)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +
geom_point()+geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+annotation_raster(acantho_logo,aes(species=acantho,treatement=CO2),xmax = 25,ymin = 1,ymax = 25)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +
geom_point()+geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+annotation_raster(acantho_logo,aes(species=acantho,treatement=CO2),1,25,1,25)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +
geom_point()+geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_grid()
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +
geom_point()+geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_warp()
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +
geom_point()+geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_wrap()
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +
geom_point()+geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_wrap()
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +
geom_point()+geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_grid()
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_grid()
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_grid()+annotation_raster(acantho_logo,1,25,1,25)
library(png)
library("directlabels")
library(png)
library(directlabels)
library(png)
install.packages(directlabels)
library(directlabels)
library(png)
install.packages("directlabels")
library(directlabels)
acantho_logo <- readPNG('figures/acantho.png')
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_grid()+annotation_raster(acantho_logo,1,25,1,25)+directlabels::geom_dl(aes(label = class), method = "smart.grid")
library(png)
install.packages("directlabels")
library(directlabels)
acantho_logo <- readPNG('figures/acantho.png')
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_grid()+directlabels::geom_dl(aes(label = class), method = "smart.grid")
install.packages("directlabels")
install.packages("directlabels")
install.packages("directlabels")
install.packages("directlabels")
install.packages("directlabels")
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
library(png)
install.packages("directlabels")
library(directlabels)
acantho_logo <- readPNG('figures/acantho.png')
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data , aes(x =sl, y =activity,col=species)) +geom_smooth(method='gam')+facet_grid(treatment~species) + ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+facet_grid()+directlabels::geom_dl(aes(label = class), method = "smart.grid")
install.packages("directlabels")
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
install.packages("pacman", repos = "http://cran.us.r-project.org")
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data <- na.omit(data)
data
# Drop irrelevant columns
# drop_data <- data[,!names(data)%in% c('loc','comment','...1')]
# drop_data <- data %>% select(-loc,-comment,-...1)
drop_data <- data[3:8]
drop_data
# Check spelling in species and treatment but also generate a summary table
checked_data1 <- drop_data$species %>% unique()
checked_data2 <- drop_data$treatment %>% unique()
cda <- drop_data %>% group_by(species,treatment) %>% mutate(species = as.factor(species))
levels(cda$species)
# Use flextable to render the summary table in a tidy format
# mean_data <- mean(drop_data)
# SE_data <- drop_data %>% summarise(sd())
# cda <- drop_data %>% group_by(species,treatment) %>% mutate(species = as.factor(species))
#  levels(cda$species)
# Use flextable to render the summary table in a tidy format
mean_sd <- list(mean=~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE)
)
drop_data  %>% group_by(species,treatment,size)%>% summarise(across(where(is.numeric)&! animal_id, mean_sd)) %>% flextable(,col_keys = c("species","treatement","size","sl_mean","sl_sd","activity_mean","activity_sd")) %>% add_header_row(, values = c("", "sl","activity"), colwidths = c(3, 2,2)) %>% align(, i = 1, part = "header", align = "center")
# %>% summarise(across(starts_with("sl"), .names = "mean&sd"))
file.create("D:/S2 2022/BIOL3207/week6/cloning repo/JamesU7457462/.gitignore")
dir.create("D:/S2 2022/BIOL3207/week6/cloning repo/JamesU7457462/week6 workshop/figures/")
library(png)
acantho_logo <- readPNG('figures/acantho.png')
ambon_logo <- readPNG('figures/ambon.png')
chromis_logo <- readPNG('figures/chromis.png')
humbug_logo <- readPNG('figures/humbug.png')
lemon_logo <- readPNG('figures/lemon.png')
whitedams_logo <- readPNG('figures/whitedams.png')
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(drop_data , aes(x =species, y =activity,col=treatment)) +geom_boxplot()+ ggtitle("difference between control and acidification treatments") + theme(plot.title = element_text(hjust = 0.5))+annotation_raster(acantho_logo,.5,1.5,50,60)+annotation_raster(ambon_logo,1.5,2.5,50,60)+annotation_raster(chromis_logo,2.5,3.5,50,60)+annotation_raster(humbug_logo,3.5,4.5,50,60)+annotation_raster(lemon_logo,4.5,5.5,50,60)+annotation_raster(whitedams_logo,5.5,6.5,50,60)
# Use ggsave to save the figure
ggsave('figures/1.png')
# The Desktop shows the changes in the window, like +figures/
## NO, because the images on github would not display because DNS could not resolve to the ip address of the image outbound address, so I would not choose to view the images on the web.
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
data1 <- drop_data[drop_data$species=='chromis'|drop_data$species=='lemon'| drop_data$species=='acantho',]
ggplot(data1,aes(x =species, y =activity,col=treatment))+geom_boxplot()+annotation_raster(acantho_logo,.5,1.5,40,50)+annotation_raster(chromis_logo,1.5,2.5,40,50)+annotation_raster(lemon_logo,2.5,3.5,40,50)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control[3]
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>% select(species,treatment,activity) %>% filter(species==data_species[i]& treatment== 'CO2')
mean_difference[i] <- mean(fit_control)-mean(fit_CO2)
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df.value
}
pval
dfval
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>% select(species,treatment,activity) %>% filter(species==data_species[i]& treatment== 'CO2')
mean_difference[i] <- mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
pval
dfval
mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select()
fit1
mean_difference
mean_difference <- c()
mean_difference[1]
mean_difference[2]
mean_difference[1] <- “test“
mean_difference[1] <-"test"
mean_difference[2] <-"test2"
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
#mean_difference[i] <-
mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
#mean_difference[i] <-
mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
pval
dfval
mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,)
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
#mean_difference[i] <-
mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
pval
dfval
mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,)
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
mean_difference[i] <- mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
pval
dfval
mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,)
for (i in 1:6) { print(i)}
fit_control
fit_control[3]
fit_control[3]
mean(fit_control[3])
# fit_control_temp <- mean()
mean_difference[i] <- mean(as.numerical(fit_control[3]))-mean(as.numerical(fit_CO2[3]))
# fit_control_temp <- mean()
mean_difference[i] <- mean(as.numeric(fit_control[3]))-mean(as.numeric(fit_CO2[3]))
# fit_control_temp <- mean()
fit_control_num<-apply(fit_control,as.numeric)
fit_control_num<-apply(fit_control,as.numeric)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control
fit_control_num<-apply(fit_control,as.numeric)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control
fit_control<-apply(fit_control,as.character())
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control
as.numeric(as.character(fit_control))
fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control <- as.numeric(as.character(fit_control))
fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
# fit_control <- as.numeric(as.character(fit_control))
fit_control <- as.numeric(unlist(fit_control))
fit_control_temp <-mean(fit_control)
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
#
# data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
# pval <- c()
# dfval <- c()
# mean_difference <- c()
# for (i in 1:6) {
#   fit_control <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'control')
#
#   fit_CO2 <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'CO2')
#
#   # fit_control_temp <- mean()
#  mean_difference[i] <- mean(as.numeric(fit_control[3]))-mean(as.numeric(fit_CO2[3]))
#  pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
#  dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
#
# }
#
# for (i in 1:6) { print(i)}
#
# pval
# dfval
# mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
library(dplyr)
library(rstatix)
#
# data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
# pval <- c()
# dfval <- c()
# mean_difference <- c()
# for (i in 1:6) {
#   fit_control <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'control')
#
#   fit_CO2 <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'CO2')
#
#   # fit_control_temp <- mean()
#  mean_difference[i] <- mean(as.numeric(fit_control[3]))-mean(as.numeric(fit_CO2[3]))
#  pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
#  dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
#
# }
#
# for (i in 1:6) { print(i)}
#
# pval
# dfval
# mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
#
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
fit2<- drop_data %>% select(species,treatment,sl)%>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
#
# data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
# pval <- c()
# dfval <- c()
# mean_difference <- c()
# for (i in 1:6) {
#   fit_control <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'control')
#
#   fit_CO2 <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'CO2')
#
#   # fit_control_temp <- mean()
#  mean_difference[i] <- mean(as.numeric(fit_control[3]))-mean(as.numeric(fit_CO2[3]))
#  pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
#  dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
#
# }
#
# for (i in 1:6) { print(i)}
#
# pval
# dfval
# mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
#
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
fit2<- drop_data %>% select(species,treatment,sl)%>% group_by(species) %>% summarise(broom::tidy(t.test(sl~treatment, data = cur_data())), .groups = "keep")
fit2 %>% select(statistic,conf.low,conf.high,p.value,parameter)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
# fit_control <- as.numeric(as.character(fit_control))
fit_control <- as.numeric(unlist(fit_control))
fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  mean()
#
# # fit_control <- as.numeric(as.character(fit_control))
# fit_control <- as.numeric(unlist(fit_control))
#
# fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  mean(.)
#
# # fit_control <- as.numeric(as.character(fit_control))
# fit_control <- as.numeric(unlist(fit_control))
#
# fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  mean([[.x]])
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  summarise(mean(.))
#
# # fit_control <- as.numeric(as.character(fit_control))
# fit_control <- as.numeric(unlist(fit_control))
#
# fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  summarise(mean())
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  summarise(mean(.x))
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  summarise(mean())
drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity)
#
# # fit_control <- as.numeric(as.character(fit_control))
# fit_control <- as.numeric(unlist(fit_control))
#
# fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>% summarise(mean())
drop_data %>% filter(species=='acantho'& treatment== 'control')
drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% summarise(mean = mean(activity))
View(fit_control)
?fig.cap
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
# fit_control_temp <- mean()
mean_difference[i] <-  abs( ( drop_data %>% filter(species==data_species[i]& treatment=='control') %>% summarise(mean = mean(activity)))-   (     drop_data %>% filter(species==data_species[i]& treatment== 'CO2' ) %>% summarise(mean = mean(activity))
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
