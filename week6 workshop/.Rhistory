fit1
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>% select(species,treatment,activity) %>% filter(species==data_species[i]& treatment== 'CO2')
mean_difference[i] <- mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
pval
dfval
mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select()
fit1
mean_difference
mean_difference <- c()
mean_difference[1]
mean_difference[2]
mean_difference[1] <- “test“
mean_difference[1] <-"test"
mean_difference[2] <-"test2"
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
#mean_difference[i] <-
mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
#mean_difference[i] <-
mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
pval
dfval
mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,)
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
#mean_difference[i] <-
mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
pval
dfval
mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,)
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
mean_difference[i] <- mean(fit_control[3])-mean(fit_CO2[3])
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
}
pval
dfval
mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,)
for (i in 1:6) { print(i)}
fit_control
fit_control[3]
fit_control[3]
mean(fit_control[3])
# fit_control_temp <- mean()
mean_difference[i] <- mean(as.numerical(fit_control[3]))-mean(as.numerical(fit_CO2[3]))
# fit_control_temp <- mean()
mean_difference[i] <- mean(as.numeric(fit_control[3]))-mean(as.numeric(fit_CO2[3]))
# fit_control_temp <- mean()
fit_control_num<-apply(fit_control,as.numeric)
fit_control_num<-apply(fit_control,as.numeric)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control
fit_control_num<-apply(fit_control,as.numeric)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control
fit_control<-apply(fit_control,as.character())
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control
as.numeric(as.character(fit_control))
fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
fit_control <- as.numeric(as.character(fit_control))
fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
# fit_control <- as.numeric(as.character(fit_control))
fit_control <- as.numeric(unlist(fit_control))
fit_control_temp <-mean(fit_control)
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
#
# data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
# pval <- c()
# dfval <- c()
# mean_difference <- c()
# for (i in 1:6) {
#   fit_control <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'control')
#
#   fit_CO2 <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'CO2')
#
#   # fit_control_temp <- mean()
#  mean_difference[i] <- mean(as.numeric(fit_control[3]))-mean(as.numeric(fit_CO2[3]))
#  pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
#  dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
#
# }
#
# for (i in 1:6) { print(i)}
#
# pval
# dfval
# mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
library(dplyr)
library(rstatix)
#
# data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
# pval <- c()
# dfval <- c()
# mean_difference <- c()
# for (i in 1:6) {
#   fit_control <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'control')
#
#   fit_CO2 <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'CO2')
#
#   # fit_control_temp <- mean()
#  mean_difference[i] <- mean(as.numeric(fit_control[3]))-mean(as.numeric(fit_CO2[3]))
#  pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
#  dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
#
# }
#
# for (i in 1:6) { print(i)}
#
# pval
# dfval
# mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
#
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
fit2<- drop_data %>% select(species,treatment,sl)%>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
#
# data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
# pval <- c()
# dfval <- c()
# mean_difference <- c()
# for (i in 1:6) {
#   fit_control <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'control')
#
#   fit_CO2 <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'CO2')
#
#   # fit_control_temp <- mean()
#  mean_difference[i] <- mean(as.numeric(fit_control[3]))-mean(as.numeric(fit_CO2[3]))
#  pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
#  dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
#
# }
#
# for (i in 1:6) { print(i)}
#
# pval
# dfval
# mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
#
# library(dplyr)
# library(rstatix)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
fit2<- drop_data %>% select(species,treatment,sl)%>% group_by(species) %>% summarise(broom::tidy(t.test(sl~treatment, data = cur_data())), .groups = "keep")
fit2 %>% select(statistic,conf.low,conf.high,p.value,parameter)
fit_control <- drop_data %>% select(species,treatment,activity) %>%  filter(species=='acantho'& treatment== 'control')
# fit_control <- as.numeric(as.character(fit_control))
fit_control <- as.numeric(unlist(fit_control))
fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  mean()
#
# # fit_control <- as.numeric(as.character(fit_control))
# fit_control <- as.numeric(unlist(fit_control))
#
# fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  mean(.)
#
# # fit_control <- as.numeric(as.character(fit_control))
# fit_control <- as.numeric(unlist(fit_control))
#
# fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  mean([[.x]])
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  summarise(mean(.))
#
# # fit_control <- as.numeric(as.character(fit_control))
# fit_control <- as.numeric(unlist(fit_control))
#
# fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  summarise(mean())
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  summarise(mean(.x))
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>%  summarise(mean())
drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity)
#
# # fit_control <- as.numeric(as.character(fit_control))
# fit_control <- as.numeric(unlist(fit_control))
#
# fit_control_temp <-mean(fit_control)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity) %>% summarise(mean())
drop_data %>% filter(species=='acantho'& treatment== 'control')
drop_data %>% filter(species=='acantho'& treatment== 'control') %>% select(activity)
fit_control <- drop_data %>% filter(species=='acantho'& treatment== 'control') %>% summarise(mean = mean(activity))
View(fit_control)
?fig.cap
#
data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
pval <- c()
dfval <- c()
mean_difference <- c()
for (i in 1:6) {
fit_control <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'control')
fit_CO2 <- drop_data %>%
select(species,treatment,activity) %>%
filter(species==data_species[i]& treatment== 'CO2')
# fit_control_temp <- mean()
mean_difference[i] <-  abs( ( drop_data %>% filter(species==data_species[i]& treatment=='control') %>% summarise(mean = mean(activity)))-   (     drop_data %>% filter(species==data_species[i]& treatment== 'CO2' ) %>% summarise(mean = mean(activity))
pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
drop_data %>%
group_by(species) %>%
t_test(activity ~ treatment,var.equal=T)
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data <- na.omit(data)
data
# Drop irrelevant columns
# drop_data <- data[,!names(data)%in% c('loc','comment','...1')]
# drop_data <- data %>% select(-loc,-comment,-...1)
drop_data <- data[,c(3:8)]
drop_data
# Check spelling in species and treatment but also generate a summary table
checked_data1 <- drop_data$species %>% unique()
checked_data2 <- drop_data$treatment %>% unique()
drop_data %>% group_by(species,animal_id) %>% summarise(,.groups ) %>% unique()
drop_data %>%
group_by(species) %>%
t_test(activity ~ treatment,var.equal=T)
library(tidyverse)
drop_data %>%
group_by(species) %>%
t_test(activity ~ treatment,var.equal=T)
library(rstatix)
drop_data %>%
group_by(species) %>%
t_test(activity ~ treatment,var.equal=T)
#
# data_species <- c('acantho','ambon','chromis','humbug','lemon','whitedams')
# pval <- c()
# dfval <- c()
# mean_difference <- c()
# for (i in 1:6) {
#   fit_control <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'control')
#
#   fit_CO2 <- drop_data %>%
#     select(species,treatment,activity) %>%
#     filter(species==data_species[i]& treatment== 'CO2')
#
#   # fit_control_temp <- mean()
#  mean_difference[i] <-  abs( ( drop_data %>% filter(species==data_species[i]& treatment=='control') %>% summarise(mean = mean(activity)))-   (     drop_data %>% filter(species==data_species[i]& treatment== 'CO2' ) %>% summarise(mean = mean(activity))
#
#
#  pval[i] <- t.test(fit_control[3],fit_CO2[3])$p.value
#  dfval[i]<- t.test(fit_control[3],fit_CO2[3])$df
#
# }
#
# for (i in 1:6) { print(i)}
#
# pval
# dfval
# mean_difference
#如果没有安装dplyr，rstatix和reshape2这三个R包，先去掉下面三行的#，运行进行安装
# install.packages("BiocManager")
# BiocManager::install("dplyr")
# BiocManager::install("rstatix")
# BiocManager::install("reshape2")
#
# library(dplyr)
# library(reshape2)
# result=melt(fit1) %>%
#   group_by(species) %>%
#   t_test(species ~ treatment)
# result
# Provide the difference in means, their 95% confidence intervals, t-statistic, df and p-value.
## this one
library(rstatix)
drop_data %>%
group_by(species) %>%
t_test(activity ~ treatment,var.equal=T)
## or this one
fit1 <- drop_data %>% select(species,treatment,activity) %>% group_by(species) %>% summarise(broom::tidy(t.test(activity~treatment, data = cur_data())), .groups = "keep")
fit1 %>% select(statistic,conf.low,conf.high,p.value,parameter)
fit2<- drop_data %>% select(species,treatment,sl)%>% group_by(species) %>% summarise(broom::tidy(t.test(sl~treatment, data = cur_data())), .groups = "keep")
fit2 %>% select(statistic,conf.low,conf.high,p.value,parameter)
# add 10000 loops variable
n_reps <- 10000
# create the sample distribution from 1 to 10000
samp_dist <- rep(0,n_reps)
# use the for loop to construct the loop structure
for (i in 1:n_reps)
{
# generate the permuated group
permuted_data <- drop_data %>% filter(species=='humbug') %>% select(treatment,activity)
# use the t.test to figure out the mean difference between permuted set_A and set_B
permuted_t_test_results <- t.test(permuted_data$activity[which(permuted_data$treatment=="control")],permuted_data$activity[which(permuted_data$treatment=="CO2")],var.equal=T)
# loop again
samp_dist[i] <- permuted_t_test_results$statistic
}
install.packages("Deducer")
library(deducer)
library(deducer)
library(Deducer)
install.packages("rJava")
library(Deducer)
library(rJava)
install.packages("JVM")
library(rJava)
library(JVM)
drop_data %>% filter(species=='humbug') %>% select(treatment,activity) %>% mutate(treatment=treatment[sample(row_number())])
drop_data %>% filter(species=='humbug') %>% select(treatment,activity)
# add 10000 loops variable
n_reps <- 10000
# create the sample distribution from 1 to 10000
samp_dist <- rep(0,n_reps)
# use the for loop to construct the loop structure
for (i in 1:n_reps)
{
# generate the permuated group
permuted_data <- drop_data %>% filter(species=='humbug') %>% select(treatment,activity) %>% mutate(treatment=treatment[sample(row_number())])
# use the t.test to figure out the mean difference between permuted set_A and set_B
permuted_t_test_results <- t.test(permuted_data$activity[which(permuted_data$treatment=="control")],permuted_data$activity[which(permuted_data$treatment=="CO2")],var.equal=T)
# loop again
samp_dist[i] <- permuted_t_test_results$statistic
}
t_test_statistic<-t.test(permuted_data$activity[which(permuted_data$treatment=='control')],permuted_data$activity[which(permuted_data$treatment=='CO2')])$statistic
plot_tibble <- tibble(value = samp_dist,extreme = (abs(samp_dist) > abs(t_test_statistic)))
# use ggplot to create the histogram of plot_tibble
ggplot(plot_tibble,aes(x=value,fill=extreme))+geom_histogram(bins=200)
plot_tibble
permutation_pvalue <- mean(plot_tibble$extreme)
permutation_pvalue
